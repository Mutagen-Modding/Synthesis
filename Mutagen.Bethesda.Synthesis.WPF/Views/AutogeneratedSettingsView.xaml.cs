using Noggog.WPF;
using ReactiveUI;
using System.Reactive.Disposables;
using System.Reactive.Linq;
using System.Windows;

namespace Mutagen.Bethesda.Synthesis.WPF;

/// <summary>
/// Interaction logic for AutogeneratedSettingsView.xaml
/// </summary>
public partial class AutogeneratedSettingsView
{
    public AutogeneratedSettingsView()
    {
        InitializeComponent();
        this.WhenActivated(disposable =>
        {
            this.WhenAnyFallback(x => x.ViewModel!.SettingsLoading)
                .Select(x => x ? Visibility.Visible : Visibility.Collapsed)
                .BindTo(this, x => x.ProcessingRingGrid.Visibility)
                .DisposeWith(disposable);
            this.WhenAnyFallback(x => x.ViewModel!.SettingsLoading)
                .Select(x => x ? Visibility.Visible : Visibility.Collapsed)
                .BindTo(this, x => x.ProcessingRing.Visibility)
                .DisposeWith(disposable);
            this.WhenAnyFallback(x => x.ViewModel!.Bundle!.Settings)
                .BindTo(this, x => x.ReflectionSettingTabs.ItemsSource)
                .DisposeWith(disposable);
            this.WhenAnyFallback(x => x.ViewModel!.Bundle!.Settings!.Count)
                .Select(x => x > 0 ? Visibility.Visible : Visibility.Collapsed)
                .BindTo(this, x => x.ReflectionSettingTabs.Visibility)
                .DisposeWith(disposable);
            this.Bind(this.ViewModel, vm => vm.SelectedSettings, view => view.ReflectionSettingTabs.SelectedItem)
                .DisposeWith(disposable);
            Observable.CombineLatest(
                    this.WhenAnyFallback(x => x.ViewModel!.Error),
                    this.WhenAnyFallback(x => x.ViewModel!.SettingsLoading),
                    (err, loading) => !loading && err.Failed)
                .Select(failed => failed ? Visibility.Visible : Visibility.Collapsed)
                .BindTo(this, x => x.ErrorPanel.Visibility)
                .DisposeWith(disposable);
            this.WhenAnyFallback(x => x.ViewModel!.Error.Reason)
                .BindTo(this, x => x.ErrorBox.Text)
                .DisposeWith(disposable);
        });
    }
}